name: Publish to Firefox Addon Gallery

on:
  push:
    tags:
      - v*

env:
  RUN_IDENTIFIER: run-${{ github.run_id }}-${{ github.run_attempt }}
jobs:
  pack-addon:
    uses: ./.github/workflows/pack_addon.yml
    with:
      addonType: "firefox"
  publish-firefox:
    runs-on: ubuntu-latest
    needs: pack-addon
    steps:
      - name: Download packed addon artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.pack-addon.outputs.artifactName }}
          path: packed-addon-artifact

      - name: Get JWT issue and expiration date
        id: date
        run: |
          echo "issueDate=$(date -u +%s)" >> $GITHUB_OUTPUT
          echo "expDate=$(date -d '+4 minutes' -u +%s)" >> $GITHUB_OUTPUT

      - name: Generate JWT token
        id: jwt-token-generate
        uses: morzzz007/github-actions-jwt-generator@1.0.1
        with:
          secret: ${{ secrets.FIREFOX_GALLERY_API_SECRET }}
          payload: >
            {
              "iat": ${{ steps.date.outputs.issueDate }},
              "exp": ${{ steps.date.outputs.expDate }},
              "jti": "${{ env.RUN_IDENTIFIER }}",
              "iss": "${{ secrets.FIREFOX_GALLERY_API_KEY }}"
            }

      - name: Upload firefox addon
        id: firefox-upload-request
        uses: fjogeleit/http-request-action@v1
        with:
          url: "https://addons.mozilla.org/api/v5/addons/upload/"
          method: "POST"
          customHeaders: '{"Authorization": "JWT ${{ steps.jwt-token-generate.outputs.token }}" }'
          contentType: multipart/form-data
          data: '{ "channel": "listed" }'
          files: '{ "upload": "packed-addon-artifact/${{ needs.pack-addon.outputs.zipFileName }}" }'

      - name: Wait for upload validation
        id: firefox-validation-request
        uses: mydea/action-wait-for-api@v1
        with:
          url: ${{ fromJson(steps.firefox-upload-request.outputs.response).url }}
          method: "GET"
          headers: '{"Authorization" : "JWT ${{ steps.jwt-token-generate.outputs.token }}" }'
          expected-response-field: "processed"
          expected-response-field-value: "true"
          timeout: 300
          interval: 5

      - name: Create new addon version
        id: firefox-version-request
        uses: fjogeleit/http-request-action@v1
        with:
          url: "https://addons.mozilla.org/api/v5/addons/addon/${{ secrets.FIREFOX_GALLERY_ADDON_IDENTIFIER }}/versions/"
          method: "POST"
          customHeaders: '{"Authorization": "JWT ${{ steps.jwt-token-generate.outputs.token }}" }'
          contentType: application/json
          data: '{ "upload": "${{ fromJson(steps.firefox-upload-request.outputs.response).uuid }}" }'
  publish-chrome:
    runs-on: ubuntu-latest
    needs: pack-addon
    steps:
      - name: Download packed addon artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.pack-addon.outputs.artifactName }}
          path: packed-addon-artifact

      - name: Upload extension
        uses: mnao305/chrome-extension-upload@v4.0.0
        with:
          file-path: ${{ format('packed-addon-artifact/{0}', needs.pack-addon.outputs.zipFileName) }}
          extension-id: ${{ secrets.CHROME_WEB_EXTENSION_ID }}
          client-id: ${{ secrets.CHROME_WEB_CLIENT_ID }}
          client-secret: ${{ secrets.CHROME_WEB_CLIENT_SECRET }}
          refresh-token: ${{ secrets.CHROME_WEB_REFRESH_TOKEN }}
          publish: true